<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>uk.co.cartaxcheck</groupId>
  <artifactId>car-check-test</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>car-check-test</name>
  <url>https://www.cartaxcheck.co.uk</url>

  <properties>
    <rest.assured.version>3.0.7</rest.assured.version>
    <cucumber.version>1.2.5</cucumber.version>
    <hamcrest.version>1.3</hamcrest.version>
    <junit.version>4.12</junit.version>
    <gson.version>2.8.5</gson.version>
    <pico.container>2.15</pico.container>
    <org.json.version>20180130</org.json.version>
    <jackson.annotations.version>2.9.7</jackson.annotations.version>
    <selenium.webdriver.version>3.141.59</selenium.webdriver.version>
    <webdrivermanager.version>4.4.1</webdrivermanager.version>
    <lombok.version>1.18.4</lombok.version>
    <java.jdk.version>1.8</java.jdk.version>
    <maven.compiler.version>3.7.0</maven.compiler.version>
    <maven.surefire.version>2.22.0</maven.surefire.version>
    <cucumber.jvm.parallel.plugin.version>5.0.0</cucumber.jvm.parallel.plugin.version>
    <org.apache.commons.version>3.5</org.apache.commons.version>
    <project.build.sourceEncoding>${file.encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>


  <dependencies>
    <!-- https://mvnrepository.com/artifact/org.picocontainer/picocontainer -->
    <dependency>
      <groupId>org.picocontainer</groupId>
      <artifactId>picocontainer</artifactId>
      <version>${pico.container}</version>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.version}</version>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-picocontainer</artifactId>
      <version>${cucumber.version}</version>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest.assured.version}</version>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>json-path</artifactId>
      <version>${rest.assured.version}</version>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>xml-path</artifactId>
      <version>${rest.assured.version}</version>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>json-schema-validator</artifactId>
      <version>${rest.assured.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/junit/junit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-all -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>${hamcrest.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-library -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>${hamcrest.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-core -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${hamcrest.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.annotations.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.json/json -->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>${org.json.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${org.apache.commons.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple -->
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1</version>
    </dependency>
    <!--https://search.maven.org/remotecontent?filepath=org/projectlombok/lombok/1.18.4/lombok-1.18.4.jar-->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.webdriver.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>${webdrivermanager.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <source>${java.jdk.version}</source>
          <target>${java.jdk.version}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.temyers</groupId>
        <artifactId>cucumber-jvm-parallel-plugin</artifactId>
        <version>${cucumber.jvm.parallel.plugin.version}</version>
        <executions>
          <execution>
            <id>generateRunners</id>
            <phase>validate</phase>
            <goals>
              <goal>generateRunners</goal>
            </goals>
            <configuration>
              <glue>
                <package>uk.co.cartaxcheck.steps</package>
              </glue>
              <!-- These are optional, with the default values -->
              <!-- Where to output the generated tests -->
              <outputDirectory>${project.build.directory}/generated-test-sources/cucumber
              </outputDirectory>
              <featuresDirectory>src/test/resources/Features/</featuresDirectory>
              <cucumberOutputDir>target/cucumber-parallel/</cucumberOutputDir>
              <plugins>
                <plugin>
                  <!--The available options are junit, testng, html, pretty, json, usage and rerun -->
                  <name>json</name>
                  <!--Optional file extension. For build in cucumber plugins a sensible default is provided. -->
                  <extension>json</extension>
                  <!--Optional output directory. Overrides cucumberOutputDirectory. Usefull when different
                      plugins create files with the same extension-->
                  <outputDirectory>${project.build.directory}/cucumber-parallel/json</outputDirectory>
                </plugin>
              </plugins>
              <strict>true</strict>
              <!-- CucumberOptions.monochrome property -->
              <monochrome>true</monochrome>
              <!-- The tags to run, maps to CucumberOptions.tags property. Default is no tags. -->
              <tags>
                <tag>@wip</tag>
              </tags>
              <!-- Generate TestNG runners instead of JUnit ones. -->
              <useTestNG>false</useTestNG>
              <!-- The naming scheme to use for the generated test classes.  One of ['simple', 'feature-title', 'pattern'] -->
              <namingScheme>simple</namingScheme>
              <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
              <namingPattern>Parallel{c}IT</namingPattern>
              <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
              <parallelScheme>SCENARIO</parallelScheme>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <configuration>

          <!--Custom Properties-->
          <systemPropertyVariables>
            <browser>chrome</browser>
            <env>local</env>
            <bs.username></bs.username>
            <bs.key></bs.key>
          </systemPropertyVariables>

          <forkCount>20</forkCount>
          <reuseForks>true</reuseForks>
          <includes>
            <include>**/Parallel*IT.class</include>
          </includes>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
